import 'package:dio/dio.dart';
import 'package:intl/intl.dart';
import 'package:weather/constants.dart';
import 'package:weather/keys.dart';
import 'package:weather/models/forecast.dart';
import 'package:weather/models/timelinemodels/weather_timeline/weather_timeline.dart';
import 'package:weather/models/weather.dart';

Future getForeCast(Coord location) async {
  Dio dio = Dio();
  try {
    Response response =
        await dio.get("$weatherBaseURL/forecast", queryParameters: {
      "lat": location.lat,
      "lon": location.lon,
      "appid": weatherKey,
      "units": "metric",
      "cnt": 20
    });
    // log(response.data.toString());
    return Forecast.fromJson(response.data);
  } on DioError catch (e) {
    print(e); // Generated by https://quicktype.io
    return e;
  }
}

Future getWeatherHistory(Coord location) async {
  Dio dio = Dio();
  try {
    Response response = await dio.get(
        "https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location.lat},${location.lon}/${DateFormat('yyyy-MM-dd').format(DateTime.now().subtract(const Duration(days: 1)))}/${DateFormat('yyyy-MM-dd').format(DateTime.now().add(const Duration(days: 1)))}",
        queryParameters: {
          "key": "M6FZYA3QRTAPSTYZJVJM6VJSU",
          "include": "current"
        });

    List<WeatherTimeline> weatherTimeline = [];
    response.data["days"].forEach((val) {
      weatherTimeline.add(WeatherTimeline.fromJson(val));
    });

    return weatherTimeline;
  } on DioError catch (e) {
    print(e);
    return e;
  }
}
