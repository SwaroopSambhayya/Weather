// Generated by https://quicktype.io
// To parse this JSON data, do
//
//     final weatherDemo = weatherDemoFromJson(jsonString);

import 'dart:convert';

List<WeatherTimeline> weatherDemoFromJson(String str) {
  final jsonData = json.decode(str);
  return List<WeatherTimeline>.from(
      jsonData.map((x) => WeatherTimeline.fromJson(x)));
}

String weatherDemoToJson(List<WeatherTimeline> data) {
  final dyn = List<dynamic>.from(data.map((x) => x.toJson()));
  return json.encode(dyn);
}

class WeatherTimeline {
  String? datetime;
  int? datetimeEpoch;
  double? tempmax;
  double? tempmin;
  double? temp;
  double? feelslikemax;
  double? feelslikemin;
  double? feelslike;
  double? dew;
  double? humidity;
  double? precip;
  double? precipprob;
  double? precipcover;
  List<String>? preciptype;
  double? snow;
  double? snowdepth;
  double? windgust;
  double? windspeed;
  double? winddir;
  double? pressure;
  double? cloudcover;
  double? visibility;
  double? solarradiation;
  double? solarenergy;
  double? uvindex;
  double? severerisk;
  String? sunrise;
  int? sunriseEpoch;
  String? sunset;
  int? sunsetEpoch;
  double? moonphase;
  String? conditions;
  String? description;
  String? icon;
  List<String>? stations;
  String? source;

  WeatherTimeline({
    this.datetime,
    this.datetimeEpoch,
    this.tempmax,
    this.tempmin,
    this.temp,
    this.feelslikemax,
    this.feelslikemin,
    this.feelslike,
    this.dew,
    this.humidity,
    this.precip,
    this.precipprob,
    this.precipcover,
    this.preciptype,
    this.snow,
    this.snowdepth,
    this.windgust,
    this.windspeed,
    this.winddir,
    this.pressure,
    this.cloudcover,
    this.visibility,
    this.solarradiation,
    this.solarenergy,
    this.uvindex,
    this.severerisk,
    this.sunrise,
    this.sunriseEpoch,
    this.sunset,
    this.sunsetEpoch,
    this.moonphase,
    this.conditions,
    this.description,
    this.icon,
    this.stations,
    this.source,
  });

  factory WeatherTimeline.fromJson(Map<String, dynamic> json) =>
      WeatherTimeline(
        datetime: json["datetime"],
        datetimeEpoch: json["datetimeEpoch"],
        tempmax: json["tempmax"].toDouble(),
        tempmin: json["tempmin"].toDouble(),
        temp: json["temp"].toDouble(),
        feelslikemax: json["feelslikemax"].toDouble(),
        feelslikemin: json["feelslikemin"].toDouble(),
        feelslike: json["feelslike"].toDouble(),
        dew: json["dew"].toDouble(),
        humidity: json["humidity"].toDouble(),
        precip: json["precip"].toDouble(),
        precipprob: json["precipprob"].toDouble(),
        precipcover: json["precipcover"].toDouble(),
        preciptype: List<String>.from(json["preciptype"].map((x) => x)),
        snow: json["snow"].toDouble(),
        snowdepth: json["snowdepth"].toDouble(),
        windgust: json["windgust"].toDouble(),
        windspeed: json["windspeed"].toDouble(),
        winddir: json["winddir"].toDouble(),
        pressure: json["pressure"].toDouble(),
        cloudcover: json["cloudcover"].toDouble(),
        visibility: json["visibility"].toDouble(),
        solarradiation: json["solarradiation"].toDouble(),
        solarenergy: json["solarenergy"].toDouble(),
        uvindex: json["uvindex"].toDouble(),
        severerisk: json["severerisk"].toDouble(),
        sunrise: json["sunrise"],
        sunriseEpoch: json["sunriseEpoch"],
        sunset: json["sunset"],
        sunsetEpoch: json["sunsetEpoch"],
        moonphase: json["moonphase"].toDouble(),
        conditions: json["conditions"],
        description: json["description"],
        icon: json["icon"],
        stations: json["stations"] == null
            ? null
            : List<String>.from(json["stations"].map((x) => x)),
        source: json["source"],
      );

  Map<String, dynamic> toJson() => {
        "datetime": datetime,
        "datetimeEpoch": datetimeEpoch,
        "tempmax": tempmax,
        "tempmin": tempmin,
        "temp": temp,
        "feelslikemax": feelslikemax,
        "feelslikemin": feelslikemin,
        "feelslike": feelslike,
        "dew": dew,
        "humidity": humidity,
        "precip": precip,
        "precipprob": precipprob,
        "precipcover": precipcover,
        "preciptype": List<dynamic>.from(preciptype!.map((x) => x)),
        "snow": snow,
        "snowdepth": snowdepth,
        "windgust": windgust,
        "windspeed": windspeed,
        "winddir": winddir,
        "pressure": pressure,
        "cloudcover": cloudcover,
        "visibility": visibility,
        "solarradiation": solarradiation,
        "solarenergy": solarenergy,
        "uvindex": uvindex,
        "severerisk": severerisk,
        "sunrise": sunrise,
        "sunriseEpoch": sunriseEpoch,
        "sunset": sunset,
        "sunsetEpoch": sunsetEpoch,
        "moonphase": moonphase,
        "conditions": conditions,
        "description": description,
        "icon": icon,
        "stations": stations == null
            ? null
            : List<dynamic>.from(stations!.map((x) => x)),
        "source": source,
      };
}
